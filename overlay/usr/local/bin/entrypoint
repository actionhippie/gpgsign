#!/usr/bin/env bash
set -e
set -o pipefail
set -o noglob

echo "${INPUT_PRIVATE_KEY}" | gpg --batch --import -
pushd "${GITHUB_WORKSPACE}" >/dev/null
    ARGS=(
        --batch
        --yes
    )

    if [[ -n "${INPUT_PASSPHRASE}" ]]; then
        ARGS+=(--pinentry-mode loopback --passphrase-fd 0)
    fi

    if [[ -n "${INPUT_ARMOR}" && "${INPUT_ARMOR}" == "true" ]]; then
        ARGS+=(--armor)
    fi

    if [[ "${INPUT_DETACH_SIGN}" == "true" || "${INPUT_DETACH_SIGN}" == "1" ]]; then
        ARGS+=(--detach-sign)
    elif [[ "${INPUT_CLEAR_SIGN}" == "true" || "${INPUT_CLEAR_SIGN}" == "1" ]]; then
        ARGS+=(--clear-sign)
    else
        ARGS+=(--sign)
    fi

    INCLUDES=()
    FIRST=true
    while IFS= read -r INCLUDE; do
        [[ "${INCLUDE}" == "" ]] && continue

        if [[ "${FIRST}" != "true" ]]; then
            INCLUDES+=(-or)
        fi

        INCLUDES+=(-path "${GITHUB_WORKSPACE}/${INCLUDE}")
        FIRST=false
    done <<< "${INPUT_FILES}"

    if [[ ${#INCLUDES[@]} -ne 0 ]]; then
        INCLUDE_STATEMENT+="( ${INCLUDES[@]} )"
    else
        INCLUDE_STATEMENT=""
    fi

    EXCLUDES=()
    FIRST=true
    while IFS= read -r EXCLUDE; do
        [[ "${EXCLUDE}" == "" ]] && continue

        if [[ "${FIRST}" != "true" ]]; then
            EXCLUDES+=(-and)
        fi

        EXCLUDES+=(-not -path "${GITHUB_WORKSPACE}/${EXCLUDE}")
        FIRST=false
    done <<< "${INPUT_EXCLUDES}"

    if [[ ${#EXCLUDES[@]} -ne 0 ]]; then
        EXCLUDE_STATEMENT+="-and ( ${EXCLUDES[@]} )"
    else
        EXCLUDE_STATEMENT=""
    fi

    for FILE in $(find ${GITHUB_WORKSPACE} ${INCLUDE_STATEMENT} ${EXCLUDE_STATEMENT}); do
        gpg "${ARGS[@]}" "${FILE}"
    done
popd >/dev/null
